import pandas as pd
df = pd.read_csv('student-scores.csv')
df.head(3)
df.info()
final_df = df[['full_name',	'math_score',	'history_score',	'physics_score',	'chemistry_score',	'biology_score',	'english_score',	'geography_score']]
final_df.isnull().sum()
final_df = final_df.drop(index=2000) # it is null
final_df.duplicated().sum()

final_df['total_score'] = df['math_score'] + df['history_score'] + df['physics_score'] + df['chemistry_score'] + df['biology_score'] + df['english_score'] + df['geography_score']
final_df['average_score'] = (final_df['total_score'] / 7).round(1)


from reportlab.lib import colors
from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate, Table, TableStyle, Paragraph
from reportlab.lib.styles import getSampleStyleSheet

def report_card(df):
    for _, row in df.iterrows():
        full_name = row['full_name']
        total_score  = row['total_score']
        average_score = row['average_score']

        subject_scores = [['Math', row['math_score']],['History', row['history_score']],['Physics', row['physics_score']],['Chemistry', row['chemistry_score']],['Biology', row['biology_score']],['English', row['english_score']],['Geography', row['geography_score']]]

        file_name = f"report_card_{full_name.replace(' ','_')}.pdf"
        pdf = SimpleDocTemplate(file_name, pagesize=letter)
        elements = []

        style = getSampleStyleSheet()
        elements.append(Paragraph(f"<b>Report Card</b>", style['Title']))
        elements.append(Paragraph(f"Full Name: {full_name}", style['Normal']))
        elements.append(Paragraph(f"Total Score: {total_score}", style['Normal']))
        elements.append(Paragraph(f"Average Score: {average_score}",style['Normal']))
        elements.append(Paragraph("<br/>",style['Normal']))

        table_data = [['Subject', 'Score']] + subject_scores
        table = Table(table_data)
        table.setStyle(TableStyle([
            ('BACKGROUND', (0, 0), (-1, 0), colors.grey),  # Header row background
            ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),  # Header text color
            ('ALIGN', (0, 0), (-1, -1), 'CENTER'),  # Center align all cells
            ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),  # Header font bold
            ('BOTTOMPADDING', (0, 0), (-1, 0), 12),  # Padding for header
            ('BACKGROUND', (0, 1), (-1, -1), colors.beige),  # Background for other rows
            ('GRID', (0, 0), (-1, -1), 1, colors.black),  # Table grid lines
        ]))

        elements.append(table)

        pdf.build(elements)
        print(f"Report_card_generated: {file_name}")

new = final_df.head(15)
report_card(new)